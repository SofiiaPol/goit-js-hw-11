{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const BASE_URL = 'https://pixabay.com';\nconst PATH = '/api/';\nconst PARAMS = {\n  key: '43828991-79d1a60f3e87126db3a63842a',\n  imageType: 'photo',\n  orientation: 'horizontal',\n  safesearch: 'true',\n};\n\nconst getSearchParams = searchInputValue => {\n  const parameters = new URLSearchParams(PARAMS);\n  parameters.append('q', searchInputValue);\n  return parameters;\n};\n\nexport const fetchImages = searchInputValue => {\n  const url = `${BASE_URL}${PATH}?${getSearchParams(searchInputValue)}`;\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n};\n","export const renderImages = items => {\n  const htmlString = items\n    .map(\n      image => `\n    <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n            <img\n            class=\"gallery-image\"\n            src=\"${image.webformatURL}\"\n            alt=\"${image.tags}\"\n            />\n        </a>\n        <div class=\"info\">\n                        <p class=\"info-item\">\n                            <b>Likes</b>\n                            <span>${image.likes}</span> \n                        </p>\n                        <p class=\"info-item\">\n                            <b>Views</b>\n                            <span>${image.views}</span>\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Comments</b>\n                            <span>${image.comments}</span>\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Downloads</b>\n                            <span>${image.downloads}</span>\n                        </p>\n                    </div>\n    </li>\n\n`\n    )\n    .join('');\n\n  document.querySelector('.gallery').innerHTML = htmlString;\n};\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { fetchImages } from './js/pixabay-api';\nimport { renderImages } from './js/render-functions';\nimport simpleLightbox from 'simplelightbox';\n\nconst searchForm = document.querySelector('.search-form');\n\nlet lightbox;\nconst onFormSubmit = event => {\n  event.preventDefault();\n  const form = event.target;\n  console.log(form.elements);\n  console.log(form.elements.searchInput.value);\n  fetchImages(form.elements.searchInput.value)\n    .then(data => {\n      if (data.totalHits === 0) {\n        showMessage(\n          `Sorry, there are no images matching your search query. Please try again!`\n        );\n      } else {\n        renderImages(data.hits);\n        lightbox = new SimpleLightbox('.gallery a');\n      }\n    })\n    .catch(error => {\n      showError(error.message);\n    });\n};\n\nsearchForm.addEventListener('submit', onFormSubmit);\n\nfunction showError(errorMessage) {\n  iziToast.show({\n    title: 'Error',\n    message: errorMessage,\n    messageColor: 'white',\n    backgroundColor: 'tomato',\n  });\n}\n\nfunction showMessage(message) {\n  iziToast.show({\n    title: 'Message',\n    message: message,\n    messageColor: 'white',\n    backgroundColor: 'teal',\n  });\n}\n\n// `Sorry, there are no images matching your search query. Please try again!`;\n\n// if (submitButton === ' ') {\n//   submitButton.setAttribute('disabled');\n// }\n// fetchImages('flower')\n//   .then(data => {\n//     // console.log(data);\n//     // return data;\n//     const items = data.hits\n//       .map(\n//         image => `\n//     <li class=\"gallery-item\">\n//         <a class=\"gallery-link\" href=\"${image.webformatURL}\">\n//             <img\n//             class=\"gallery-image\"\n//             src=\"${image.webformatURL}\"\n//             alt=\"cat\"\n//             />\n//         </a>\n//     </li>\n\n// `\n//       )\n//       .join('');\n//     ul.innerHTML = items;\n//   })\n//   .catch(error => {\n//     console.log(error.message);\n//   });\n// console.log('data', data);\n\n// import { fetchImages } from './pixabay-api.js';\n// import { renderSearchForm } from './render-functions.js';\n"],"names":["BASE_URL","PATH","PARAMS","getSearchParams","searchInputValue","parameters","fetchImages","url","response","renderImages","items","htmlString","image","searchForm","onFormSubmit","event","form","data","showMessage","SimpleLightbox","error","showError","errorMessage","iziToast","message"],"mappings":"wvBAAA,MAAMA,EAAW,sBACXC,EAAO,QACPC,EAAS,CACb,IAAK,qCACL,UAAW,QACX,YAAa,aACb,WAAY,MACd,EAEMC,EAAkBC,GAAoB,CAC1C,MAAMC,EAAa,IAAI,gBAAgBH,CAAM,EAC7C,OAAAG,EAAW,OAAO,IAAKD,CAAgB,EAChCC,CACT,EAEaC,EAAcF,GAAoB,CAC7C,MAAMG,EAAM,GAAGP,CAAQ,GAAGC,CAAI,IAAIE,EAAgBC,CAAgB,CAAC,GACnE,OAAO,MAAMG,CAAG,EAAE,KAAKC,GAAY,CACjC,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGjC,OAAOA,EAAS,MACpB,CAAG,CACH,ECxBaC,EAAeC,GAAS,CACnC,MAAMC,EAAaD,EAChB,IACCE,GAAS;AAAA;AAAA,wCAEyBA,EAAM,aAAa;AAAA;AAAA;AAAA,mBAGxCA,EAAM,YAAY;AAAA,mBAClBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAMOA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,oCAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,oCAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,oCAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,CAM9C,EACA,KAAK,EAAE,EAEV,SAAS,cAAc,UAAU,EAAE,UAAYD,CACjD,EC3BME,EAAa,SAAS,cAAc,cAAc,EAGlDC,EAAeC,GAAS,CAC5BA,EAAM,eAAc,EACpB,MAAMC,EAAOD,EAAM,OACnB,QAAQ,IAAIC,EAAK,QAAQ,EACzB,QAAQ,IAAIA,EAAK,SAAS,YAAY,KAAK,EAC3CV,EAAYU,EAAK,SAAS,YAAY,KAAK,EACxC,KAAKC,GAAQ,CACRA,EAAK,YAAc,EACrBC,EACE,0EACV,GAEQT,EAAaQ,EAAK,IAAI,EACX,IAAIE,EAAe,YAAY,EAElD,CAAK,EACA,MAAMC,GAAS,CACdC,EAAUD,EAAM,OAAO,CAC7B,CAAK,CACL,EAEAP,EAAW,iBAAiB,SAAUC,CAAY,EAElD,SAASO,EAAUC,EAAc,CAC/BC,EAAS,KAAK,CACZ,MAAO,QACP,QAASD,EACT,aAAc,QACd,gBAAiB,QACrB,CAAG,CACH,CAEA,SAASJ,EAAYM,EAAS,CAC5BD,EAAS,KAAK,CACZ,MAAO,UACP,QAASC,EACT,aAAc,QACd,gBAAiB,MACrB,CAAG,CACH"}